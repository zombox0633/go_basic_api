package demojson

import (
	"encoding/json"
	"fmt"
)

type AnimalType struct {
	Id         int //‡∏ä‡∏∑‡πà‡∏≠‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏ï‡πâ‡∏≠‡∏á‡∏Ç‡∏∂‡πâ‡∏ô‡∏ï‡πâ‡∏ô‡∏î‡πâ‡∏ß‡∏¢ Uppercase ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ json.Marshal ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ
	Species    string
	SupSpecies string
}

func DemoJSon() {
	// & ‡∏´‡∏°‡∏≤‡∏¢‡∏ñ‡∏∂‡∏á‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ñ‡πà‡∏≤‡πÅ‡∏ö‡∏ö pointer ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏•‡∏î‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏™‡∏≥‡πÄ‡∏ô‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (Efficiency) ‚Üí ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å struct ‡∏ó‡∏±‡πâ‡∏á‡∏ï‡∏±‡∏ß
	animal := AnimalType{1, "Cat", "Siamese"}
	fmt.Println("üòæ : ", animal)

	// ‡πÅ‡∏õ‡∏•‡∏á struct ‡πÄ‡∏õ‡πá‡∏ô JSON
	dataMarshal, _ := json.Marshal(&animal)
	fmt.Println("üò∏ : ", string(dataMarshal)) //‡∏Å‡∏≤‡∏£‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡πâ‡∏≠‡∏á

	// ‡πÅ‡∏õ‡∏•‡∏á JSON ‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏õ‡πá‡∏ô struct
	newAnimal := AnimalType{}
	dataUnmarshal := json.Unmarshal(dataMarshal, &newAnimal)
	// dataUnmarshal := json.Unmarshal([]byte(`{"Id":1,"Species":"Cat","SupSpecies":"Siamese"}`), &newAnimal)

	if dataUnmarshal != nil {
		fmt.Println("üòø Unmarshal Error: ", dataUnmarshal)
	} else {
		fmt.Println("üòø : ", newAnimal)
	}
}
